{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","components/App/App.module.css","components/Filter/Filter.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/App/App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","e","target","value","reset","preventDefault","label","type","pattern","title","required","onChange","input","button","ContactItem","id","deleteContact","contactItem","onClick","ContactList","contacts","contactList","map","Filter","filter","App","JSON","parse","window","localStorage","getItem","contactJson","setContacts","setFilter","useEffect","setItem","stringify","onVisibleContact","normalizedFilter","toLowerCase","contact","includes","visibleContact","find","alert","uuidv4","prevContacts","currentTarget","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebbc60d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1Kv_3\",\"button\":\"ContactForm_button__3a9Mx\",\"input\":\"ContactForm_input__25pDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2muTo\",\"contactItem\":\"ContactList_contactItem__QE1J_\",\"button\":\"ContactList_button__JFRlt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1kF_J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__f-9Ez\",\"input\":\"Filter_input__2pYpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__ylecg\"};","import s from './Container.module.css';\n\nfunction Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nexport default Container;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={handleChange}\n          className={s.input}\n        />\n      </label>\n      <button type=\"submit\" className={s.button}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nfunction ContactItem({ name, number, id, deleteContact }) {\n  return (\n    <li key={id} className={s.contactItem}>\n      {name}: {number}\n      <button\n        type=\"button\"\n        className={s.button}\n        onClick={() => deleteContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ContactItem from './ContactItem';\nimport s from './ContactList.module.css';\n\nfunction ContactList({ contacts, deleteContact }) {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem\n          name={name}\n          number={number}\n          deleteContact={deleteContact}\n          key={id}\n          id={id}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nfunction Filter({ filter, onChange }) {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={onChange}\n        className={s.input}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState, useEffect } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport s from './App.module.css';\nimport Container from '../Container';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\nimport Filter from '../Filter';\nimport contactJson from '../contacts.json';\n\nexport default function App() {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(window.localStorage.getItem('contacts')) ?? contactJson;\n  });\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = ({ name, number }) => {\n    if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    setContacts(prevContacts => [contact, ...prevContacts]);\n  };\n\n  const changeFilter = e => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const visibleContact = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== contactId),\n    );\n  };\n\n  const onVisibleContact = visibleContact();\n\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter filter={filter} onChange={changeFilter} />\n      <ContactList contacts={onVisibleContact} deleteContact={deleteContact} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}